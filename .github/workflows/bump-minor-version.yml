name: Bump Minor Version

on:
  push:
    branches:
      - main

jobs:
  bump_manifest_version:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Bump minor version
        id: bump_version
        run: |
          echo "Reading current version from manifest.json..."
          CURRENT_VERSION=$(jq -r '.version' custom_components/ha_snapshot/manifest.json)
          echo "Current version: $CURRENT_VERSION"

          # Split into major.minor.patch (assuming it's valid semver)
          IFS='.' read -ra VER_ARR <<< "$CURRENT_VERSION"
          MAJOR="${VER_ARR[0]}"
          MINOR="${VER_ARR[1]}"
          PATCH="${VER_ARR[2]}"

          # Increment the minor version
          NEW_MINOR=$((MINOR + 1))
          NEW_VERSION="${MAJOR}.${NEW_MINOR}.0"

          echo "New version: $NEW_VERSION"

          # Update manifest.json with the new version
          jq ".version |= \"$NEW_VERSION\"" custom_components/ha_snapshot/manifest.json > manifest.tmp
          mv manifest.tmp custom_components/ha_snapshot/manifest.json

          echo "::set-output name=new_version::$NEW_VERSION"

      - name: Commit and push changes
        run: |
          NEW_VERSION="${{ steps.bump_version.outputs.new_version }}"
          echo "Committing and tagging version: v${NEW_VERSION}"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage the updated manifest
          git add custom_components/ha_snapshot/manifest.json
          
          # If manifest.json is unchanged, skip commit/tag
          if git diff --cached --quiet; then
            echo "No changes to commit (version might be unchanged). Exiting."
            exit 0
          fi

          # Commit, tag, and push
          git commit -m "chore: bump minor version to ${NEW_VERSION}"
          git tag "v${NEW_VERSION}"
          git push origin HEAD:main
          git push origin "v${NEW_VERSION}"
